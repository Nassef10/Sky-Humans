import os
import pygame
import speech_recognition as sr
from gtts import gTTS

def recognize_speech():
    """
    Uses SpeechRecognition to record audio and convert it to text.
    """
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        try:
            audio = recognizer.listen(source)  # Adjust the timeout as needed
            text = recognizer.recognize_google(audio, language="ar-EG")
            print("You said (Arabic): " + text)
            return text
        except sr.UnknownValueError:
            print("Sorry, I could not understand audio")
            return None
        except sr.RequestError as e:
            print("Could not request results from Google Speech Recognition service; {0}".format(e))
            return None

def speak_text_arabic(text):
    """
    Uses gTTS to convert Arabic text to speech and play it using pygame.
    """
    output_dir = "C:/output"
    output_file = os.path.join(output_dir, "output.mp3")

    tts = gTTS(text=text, lang='ar')
    tts.save(output_file)

    pygame.mixer.init()  # Initialize Pygame's mixer module

    pygame.mixer.music.load(output_file)
    pygame.mixer.music.play()

    while pygame.mixer.music.get_busy():
        pygame.time.Clock().tick(10)

    # Audio playback finished, remove the file
    pygame.mixer.quit()
    os.remove(output_file)

   # print(f"Audio removed: {output_file}")

def main():
    pygame.init()  # Initialize Pygame
    while True:
        user_text = recognize_speech()
        if user_text:
            speak_text_arabic(user_text)
        else:
            print("No speech recognized.")

if _name_ == "_main_":
    main()
